import android.graphics.Bitmap;
import android.graphics.Rect;
import android.view.View;

public class ScreenshotUtils {

  public static Bitmap takeScreenshot(View view) {
    view.setDrawingCacheEnabled(true);
    view.buildDrawingCache(true);
    Bitmap bitmap = Bitmap.createBitmap(view.getDrawingCache());
    view.setDrawingCacheEnabled(false);
    return bitmap;
  }

  public static Bitmap takeScreenshotOfRootView(View rootView) {
    return takeScreenshot(rootView.getRootView());
  }

  public static Bitmap takeScreenshotOfScreen(Activity activity) {
    View view = activity.getWindow().getDecorView().getRootView();
    view.setDrawingCacheEnabled(true);
    view.buildDrawingCache(true);
    Bitmap bitmap = Bitmap.createBitmap(view.getDrawingCache());
    view.setDrawingCacheEnabled(false);
    return bitmap;
  }

  public static Bitmap takeScreenshotOfView(View view) {
    view.setDrawingCacheEnabled(true);
    view.buildDrawingCache();
    Bitmap bitmap = Bitmap.createBitmap(view.getDrawingCache());
    view.setDrawingCacheEnabled(false);
    return bitmap;
  }

  public static Bitmap takeScreenshotOfView(View view, int width, int height) {
    view.setDrawingCacheEnabled(true);
    view.measure(View.MeasureSpec.makeMeasureSpec(width, View.MeasureSpec.EXACTLY),
        View.MeasureSpec.makeMeasureSpec(height, View.MeasureSpec.EXACTLY));
    view.layout((int) view.getX(), (int) view.getY(), (int) view.getX() + width, (int) view.getY() + height);
    view.buildDrawingCache();
    Bitmap bitmap = Bitmap.createBitmap(view.getDrawingCache());
    view.setDrawingCacheEnabled(false);
    return bitmap;
  }

  public static Bitmap takeScreenshotOfView(View view, Rect rect) {
    view.setDrawingCacheEnabled(true);
    view.buildDrawingCache();
    Bitmap bitmap = Bitmap.createBitmap(view.getDrawingCache(), rect.left, rect.top, rect.width(), rect.height());
    view.setDrawingCacheEnabled(false);
    return bitmap;
  }

  public static void saveScreenshot(Bitmap bitmap, String filePath) {
    File imagePath = new File(filePath);
    FileOutputStream fos;
    try {
      fos = new FileOutputStream(imagePath);
      bitmap.compress(Bitmap.CompressFormat.PNG, 100, fos);
      fos.flush();
      fos.close();
    } catch (FileNotFoundException e) {
      Log.e("ScreenshotUtils", "FileNotFoundException occurred while trying to save screenshot: " + e.getMessage());
    } catch (IO} catch (IOException e) {
  Log.e("ScreenshotUtils", "IOException occurred while trying to save screenshot: " + e.getMessage());
}
Activity activity = getActivity(); // Replace with a reference to your current activity
Bitmap screenshot = ScreenshotUtils.takeScreenshotOfScreen(activity);
String filePath = Environment.getExternalStorageDirectory() + "/screenshot.png";
ScreenshotUtils.saveScreenshot(screenshot, filePath);
<uses-permission android:name="android.permission.READ_EXTERNAL_STORAGE" />
<uses-permission android:name="android.permission.WRITE_EXTERNAL_STORAGE" />

import android.content.Intent;
import android.os.Bundle;
import android.view.View;
import android.widget.Button;
import android.widget.EditText;
import android.widget.Toast;

public class LoginActivity extends AppCompatActivity {

  private EditText emailEditText;
  private EditText passwordEditText;
  private Button loginButton;
  private Button createAccountButton;

  @Override
  protected void onCreate(Bundle savedInstanceState) {
    super.onCreate(savedInstanceState);
    setContentView(R.layout.activity_login);

    emailEditText = findViewById(R.id.email_edit_text);
    passwordEditText = findViewById(R.id.password_edit_text);
    loginButton = findViewById(R.id.login_button);
    createAccountButton = findViewById(R.id.create_account_button);

    loginButton.setOnClickListener(new View.OnClickListener() {
      @Override
      public void onClick(View v) {
        String email = emailEditText.getText().toString();
        String password = passwordEditText.getText().toString();

        if (login(email, password)) {
          Intent intent = new Intent(LoginActivity.this, PermissionsActivity.class);
          startActivity(intent);
        } else {
          Toast.makeText(LoginActivity.this, "Invalid email or password", Toast.LENGTH_SHORT).show();
        }
      }
    });

    createAccountButton.setOnClickListener(new View.OnClickListener() {
      @Override
      public void onClick(View v) {
        Intent intent = new Intent(LoginActivity.this, CreateAccountActivity.class);
        startActivity(intent);
      }
    });
  }

  private boolean login(String email, String password) {
    // Replace with code to check if the email and password are valid
    return true;
  }
}
import android.content.Intent;
import android.os.Bundle;
import android.view.View;
import android.widget.Button;
import android.widget.CheckBox;
import android.widget.Toast;

public class PermissionsActivity extends AppCompatActivity {

  private CheckBox viewMessagesCheckBox;
  private Button continueButton;

  @Override
  protected void onCreate(Bundle savedInstanceState) {
    super.onCreate(savedInstanceState);
    setContentView(R.layout.activity_permissions);

    viewMessagesCheckBox = findViewById(R.id.view_messages_checkbox);
    continueButton = findViewById(R.id.continue_button);

    continueButton.setOnClickListener(new View.OnClickListener() {
      @Override
      public void onClick(View v) {
        if (viewMessagesCheckBox.isChecked()) {
          Intent intent = new Intent(PermissionsActivity.this, MainActivity.class);
          startActivity(intent);
        } else {
          Toast.makeText(PermissionsActivity.this, "You must
